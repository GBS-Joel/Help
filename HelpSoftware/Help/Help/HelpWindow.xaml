<Controls:MetroWindow
        x:Class="Help.HelpWindow"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lib="clr-namespace:Help.Library;assembly=Help.Library"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        RightWindowCommandsOverlayBehavior="Always"
        WindowStartupLocation="CenterOwner"
        WindowState="Maximized"
        Icon="Resources\Icon\faviconDark.ico"
        Width="1920"
        Height="1200"
        MinWidth="1000"
        MinHeight="500"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        ResizeMode="CanResizeWithGrip"
        TextOptions.TextHintingMode="Fixed"
        TextElement.FontFamily="Segoe UI"
        RenderOptions.EdgeMode="Unspecified"
        RenderOptions.ClearTypeHint="Auto"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ico="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
        Title="HelpWindow">
  <Window.TaskbarItemInfo>
    <TaskbarItemInfo>
      <TaskbarItemInfo.ThumbButtonInfos>
        <ThumbButtonInfoCollection>
          <ThumbButtonInfo
                    DismissWhenClicked="False"
                    Command="MediaCommands.Play"
                    Description="Play" />
          <ThumbButtonInfo
                    DismissWhenClicked="True"
                    Description="Stop" />
        </ThumbButtonInfoCollection>
      </TaskbarItemInfo.ThumbButtonInfos>
    </TaskbarItemInfo>
  </Window.TaskbarItemInfo>

  <Controls:MetroWindow.RightWindowCommands>
    <Controls:WindowCommands Opacity="1">
      <StackPanel Orientation="Horizontal">
        <Button x:Name="btnTran"
                    Margin="4"
                    VerticalAlignment="Center"
                    Visibility="Visible"
                    Content="Tranlsate"
                Click="btnTran_Click" />
        <Button x:Name="btnChat"
                    Margin="4"
                    VerticalAlignment="Center"
                    Visibility="Visible"
                    Content="Chat"
                    Foreground="White"
                Click="btnChat_Click" />
        <Button x:Name="btnProposeArticle"
                    Margin="4"
                    VerticalAlignment="Center"
                    Content="{lib:TextTranslator Text='Artikel Vorschlagen'}"
                    Foreground="White"
                    Visibility="Visible"
                    Click="btnProposeArticle_Click" />
        <Button   x:Name="btnCreateNewEntry"
                    Margin="4 0 0 0"
                    VerticalAlignment="Center"
                    Content="{lib:TextTranslator Text='Neuen Artikel erstellen'}"
                    Foreground="White"
                    Visibility="Collapsed"
                    Click="btnCreateNewEntry_Click" />
        <Button x:Name="btnLogin"
                  Margin="4,0,0,0"
                  VerticalAlignment="Center"
                  Content="{lib:TextTranslator Text='Anmelden'}"
                  Foreground="White"
                  Click="btnLogin_Click" />
        <Button x:Name="btnRegister"
                  Margin="4,0,0,0"
                  VerticalAlignment="Center"
                  Content="{lib:TextTranslator Text='Registrieren'}"
                  Foreground="White"
                  Click="btnRegister_Click" />
        <Button x:Name="btnAccount"
                  Margin="4,0,0,0"
                  Content="{lib:TextTranslator Text='Konto'}"
                  Foreground="White"
                  Visibility="Collapsed"
                  Opacity="1"
                  Click="btnAccount_Click" />
        <Button x:Name="btnInfo"
                  Margin="4,0,0,0"
                  VerticalAlignment="Center"
                  Content="{lib:TextTranslator Text='Einen Fehler melden'}"
                  Foreground="White"
                  Click="btnInfo_Click" />
      </StackPanel>
    </Controls:WindowCommands>
  </Controls:MetroWindow.RightWindowCommands>

  <Controls:MetroWindow.Flyouts>
    <Controls:FlyoutsControl>
      <Controls:Flyout Header="{lib:TextTranslator Text='Einen Fehler melden'}" Position="Right" Width="700" x:Name="flyout"
                       AnimateOnPositionChange="True" AreAnimationsEnabled="True" AnimateOpacity="True"
                       IsModal="True" Theme="Adapt" IsOpenChanged="flyout_IsOpenChanged">
        <ContentPresenter x:Name="contentflyout" />
      </Controls:Flyout>
    </Controls:FlyoutsControl>
  </Controls:MetroWindow.Flyouts>

  <Grid>
    <!--<Grid.RowDefinitions>
      <RowDefinition Height="AUTO" />
    <RowDefinition Height="*" />
    </Grid.RowDefinitions> -->

    <!--<Fluent:Ribbon Grid.Row="0"  x:Name="Ribbon" Background="Red" Visibility="Collapsed">
      <Fluent:RibbonTabItem x:Name="StartRibbonHeader" Header="Start" KeyTip="S" Foreground="#FF2B579A" FontWeight="Bold">
        <Fluent:RibbonGroupBox Header="Selektion" Foreground="#FF2B579A" FontWeight="Normal">
          <Fluent:Button Uid="SelektionAuswahlRibbonButtonTabStart" Header="Selektion Auswählen" KeyTip="C"
                                FontWeight="SemiBold">
            <Fluent:Button.ToolTip>
              <Fluent:ScreenTip Title="Selektion Auswählen" HelpTopic="Vorhandene Selektion Auswählen"
                                                                Text="Hier können Sie eine Selektion Auswählen" />
            </Fluent:Button.ToolTip>
          </Fluent:Button>
        </Fluent:RibbonGroupBox>
      </Fluent:RibbonTabItem>
    </Fluent:Ribbon>-->

    <!--<Grid Grid.Row="1" Visibility="Collapsed">
      <DockPanel Grid.Row="1" x:Name="SideBar">
        <ListBox VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden" DockPanel.Dock="Left" HorizontalAlignment="Left" Width="200" Background="Red" x:Name="Anwendungen" />
        <dragablz:TabablzControl DockPanel.Dock="Right" Background="{DynamicResource AccentColorBrush}" x:Name="Tab" ShowDefaultCloseButton="True" VerticalAlignment="Stretch" Visibility="Collapsed"/>
      </DockPanel>
    </Grid>-->

    <Grid>
      <mat:DialogHost  Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <mat:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
          <mat:DrawerHost.LeftDrawerContent>
            <DockPanel>
              <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
              <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding DemoItems}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="domain:DemoItem">
                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </DockPanel>
          </mat:DrawerHost.LeftDrawerContent>
          <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <mat:ColorZone Padding="16" mat:ShadowAssist.ShadowDepth="Depth2" Background="{DynamicResource AccentColorBrush}"
                                            Mode="PrimaryMid" DockPanel.Dock="Top" x:Name="TitleBar">
              <DockPanel>
                <ico:PackIconModern Kind="Acorn" Height="40" Width="40" MouseUp="PackIconModern_MouseUp" IsEnabled="True" x:Name="icoMain"/>
                <WrapPanel Margin="24,0,0,0" VerticalAlignment="Center">
                  <TextBox HorizontalAlignment="Center" Opacity="0.9" metro:TextBoxHelper.Watermark="Search Article"
                         Style="{StaticResource MetroTextBox}" VerticalAlignment="Bottom" FontSize="20" Width="400" 
                         Margin="0,0,0,0" Height="40" metro:TextBoxHelper.ClearTextButton="True" Keyboard.KeyDown="tbSearchText_KeyDown"
                         metro:TextBoxHelper.IsSpellCheckContextMenuEnabled="False" x:Name="tbSearchText"
                         metro:TextBoxHelper.UseFloatingWatermark="False"  metro:TextBoxHelper.SelectAllOnFocus="True"/>
                  <ico:PackIconFontAwesome Kind="SearchSolid" Width="30" Height="30" Margin="20,0,0,0" VerticalAlignment="Center" 
                                         MouseRightButtonDown="PackIconFontAwesome_MouseRightButtonDown"/>
                  <Label VerticalAlignment="Center" HorizontalAlignment="Left" Content="Create Article" FontSize="20" 
                       FontWeight="SemiBold" Foreground="White" Margin="20,0,0,0" MouseUp="Label_MouseUp"/>
                  <Label VerticalAlignment="Center" HorizontalAlignment="Left" Content="DashBoard" FontSize="20" 
                       FontWeight="SemiBold" Foreground="White" Margin="20,0,0,0"/>
                </WrapPanel>
              </DockPanel>
            </mat:ColorZone>
            <Grid Background="{DynamicResource MaterialDesignPaper}">
              <ContentPresenter  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Content"  />
            </Grid>
          </DockPanel>
        </mat:DrawerHost>
      </mat:DialogHost>
      <mat:Snackbar MessageQueue="{mat:MessageQueue}" x:Name="MainSnackbar" Grid.Row="1" />
    </Grid>
  </Grid>
</Controls:MetroWindow>